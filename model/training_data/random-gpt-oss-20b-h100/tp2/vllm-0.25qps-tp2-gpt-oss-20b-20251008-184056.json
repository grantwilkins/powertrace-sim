{
  "date": "20251008-184056",
  "backend": "vllm",
  "model_id": "openai/gpt-oss-20b",
  "tokenizer_id": "openai/gpt-oss-20b",
  "num_prompts": 150,
  "tensor_parallel_size": 2,
  "request_rate": 0.25,
  "burstiness": 1.0,
  "max_concurrency": null,
  "duration": 606.8424714659996,
  "completed": 147,
  "total_input_tokens": 705070,
  "total_output_tokens": 2294,
  "request_throughput": 0.24223749475688466,
  "request_goodput:": null,
  "output_throughput": 3.7802232174985946,
  "total_token_throughput": 1165.6468247701291,
  "input_lens": [
    13911,
    3103,
    5864,
    16384,
    15588,
    681,
    15526,
    1691,
    1783,
    3138,
    2341,
    9894,
    10331,
    31546,
    3255,
    2884,
    10337,
    1594,
    2819,
    780,
    120,
    4100,
    10588,
    883,
    16384,
    403,
    2101,
    1626,
    10786,
    10059,
    2369,
    3028,
    752,
    226,
    1362,
    2373,
    7733,
    7499,
    1304,
    1432,
    630,
    16862,
    305,
    16384,
    1140,
    1234,
    503,
    4699,
    338,
    1581,
    746,
    3058,
    1139,
    545,
    1937,
    3200,
    2149,
    2786,
    994,
    1340,
    953,
    1345,
    816,
    299,
    2428,
    1284,
    332,
    3324,
    736,
    2115,
    12992,
    2302,
    6997,
    513,
    3110,
    940,
    18505,
    1057,
    1418,
    2125,
    554,
    5382,
    3335,
    368,
    10270,
    16082,
    7307,
    1639,
    615,
    6373,
    1282,
    20978,
    2512,
    5850,
    2957,
    4346,
    2021,
    14249,
    2297,
    3109,
    15858,
    453,
    493,
    5804,
    549,
    16384,
    1267,
    878,
    16384,
    10183,
    15588,
    5413,
    774,
    16335,
    1488,
    10260,
    5664,
    14948,
    3926,
    5510,
    16645,
    596,
    2774,
    8595,
    930,
    1694,
    1238,
    15278,
    4186,
    3128,
    17310,
    3616,
    951,
    2069,
    992,
    4205,
    3767,
    1589,
    3089,
    600,
    22636,
    3240,
    2400,
    4017,
    16384,
    5647,
    732,
    6827,
    469,
    1202
  ],
  "output_lens": [
    5,
    2,
    7,
    11,
    3,
    37,
    12,
    9,
    34,
    9,
    20,
    8,
    37,
    0,
    19,
    6,
    22,
    16,
    4,
    2,
    25,
    51,
    9,
    14,
    31,
    9,
    48,
    13,
    27,
    38,
    27,
    2,
    15,
    8,
    1,
    8,
    4,
    10,
    1,
    51,
    7,
    7,
    1,
    3,
    8,
    42,
    1,
    46,
    32,
    9,
    6,
    4,
    15,
    1,
    1,
    8,
    1,
    3,
    3,
    4,
    2,
    1,
    1,
    15,
    58,
    74,
    8,
    2,
    16,
    10,
    72,
    1,
    24,
    5,
    4,
    17,
    4,
    17,
    11,
    8,
    12,
    5,
    19,
    8,
    7,
    28,
    10,
    1,
    4,
    6,
    26,
    0,
    55,
    37,
    4,
    77,
    4,
    1,
    48,
    4,
    18,
    1,
    20,
    34,
    5,
    7,
    7,
    22,
    3,
    3,
    9,
    5,
    29,
    4,
    11,
    10,
    16,
    32,
    10,
    10,
    10,
    55,
    82,
    9,
    1,
    5,
    2,
    3,
    2,
    14,
    7,
    36,
    54,
    12,
    5,
    14,
    36,
    8,
    12,
    5,
    0,
    8,
    4,
    11,
    5,
    7,
    11,
    10,
    6,
    41
  ],
  "ttfts": [
    0.04309846700016351,
    0.025629672999457398,
    0.03125834599995869,
    0.058904193999296695,
    0.05878938900059438,
    0.017208010999638645,
    0.052773358000195,
    0.02182357900073839,
    0.020101808000617893,
    0.024427231999652577,
    0.020629001000088465,
    0.04714636400058225,
    0.047339875000034226,
    0.0,
    0.029203647000031197,
    0.024568599000303948,
    0.04282590799994068,
    0.022682073000396485,
    0.02411695799946756,
    0.01848609500029852,
    0.013871885999833466,
    0.028115616000832233,
    0.049344094999469235,
    0.01882959300019138,
    0.05479514000035124,
    0.01387352900019323,
    0.01846302700050728,
    0.020118627000556444,
    0.04704738799955521,
    0.04006043899971701,
    0.01946040499933588,
    0.02534417799961375,
    0.01368612900023436,
    0.014413082999453763,
    0.017101053000260436,
    0.02240812000036385,
    0.03838120300042647,
    0.03997789400000329,
    0.015495956999984628,
    0.020363835000352992,
    0.016380840999772772,
    0.06531710499984911,
    0.013815958000122919,
    0.062259522000204015,
    0.016545925000173156,
    0.020043872999849555,
    0.015238641999530955,
    0.02538210300008359,
    0.015306770999814034,
    0.019003475999852526,
    0.014489853000668518,
    0.02541510500032018,
    0.019415742000091996,
    0.01499147000049561,
    0.0201273319999018,
    0.026259448000018892,
    0.020989122999708343,
    0.025776254999982484,
    0.016888938000192866,
    0.015178691999608418,
    0.018049938999865844,
    0.018900561999544152,
    0.016486492999320035,
    0.013396762999946077,
    0.021702173000448965,
    0.018332127000576293,
    0.013695718000235502,
    0.022690955999678408,
    0.014031295000677346,
    0.02168340900061594,
    0.047729591999996046,
    0.025556037999194814,
    0.03823307599941472,
    0.017254145999686443,
    0.02411926399963704,
    0.015286550999917381,
    0.06946146100017359,
    0.019853080000757473,
    0.01794544600033987,
    0.022628071999861277,
    0.015507535000324424,
    0.031082409000191547,
    0.02600398199956544,
    0.013646972000060487,
    0.04282799900011014,
    0.05967742200027715,
    0.04004491999967286,
    0.022230096000384947,
    0.016071258000010857,
    0.028105587999561976,
    0.020028848000038124,
    0.0,
    0.025388762999682513,
    0.03342374599924369,
    0.02273905000038212,
    0.030534196999724372,
    0.0208875429998443,
    0.055474360000516754,
    0.023105602999748953,
    0.026109671999620332,
    0.05575852100082557,
    0.016762651999670197,
    0.01305099599994719,
    0.030100289000074554,
    0.013650095999764744,
    0.06354175100022985,
    0.0192471709997335,
    0.01631450400054746,
    0.056211551999695075,
    0.04685834599968075,
    0.05550271700030862,
    0.03507525100030762,
    0.015970930000548833,
    0.06140414899982716,
    0.021067227000457933,
    0.044168852000439074,
    0.02743780099990545,
    0.051933998000095016,
    0.026162999000007403,
    0.02875458400012576,
    0.06147762000000512,
    0.014718284000082349,
    0.025694305999422795,
    0.04381628500050283,
    0.014684101999591803,
    0.020260927999515843,
    0.018015114999798243,
    0.05837111599976197,
    0.03076943999985815,
    0.021602937999887217,
    0.06961940500059427,
    0.025380245000633295,
    0.014848642999822914,
    0.02089696599978197,
    0.015343029000177921,
    0.027591418999691086,
    0.02469835499960027,
    0.017091912000068987,
    0.025377838000167685,
    0.01667310799984989,
    0.0,
    0.026018595000095956,
    0.0196990080003161,
    0.028410996999809868,
    0.060788388999753806,
    0.036742274000062025,
    0.01641376499992475,
    0.0376739710000038,
    0.01711672700002964,
    0.018084931999510445
  ],
  "itls": [
    0.0022659477499473724,
    0.001899197000057029,
    0.0026343266667936405,
    0.002669218499977433,
    0.0014794799999435782,
    0.0028702156666642826,
    0.0027844360000182696,
    0.002782543999956033,
    0.0028842109090736344,
    0.0027409666249695874,
    0.002838253526294322,
    0.0026185108571163645,
    0.00289366280556654,
    0.00289366280556654,
    0.002834847944440197,
    0.0026779097999678923,
    0.0028552115238112278,
    0.002838408199992652,
    0.00256890833346309,
    0.0021745960002590436,
    0.0028115689583122125,
    0.002901192080007604,
    0.0027016754999067416,
    0.0027988232307577096,
    0.0029120327333354607,
    0.002813249874975554,
    0.0028863627446898657,
    0.0028683524167263386,
    0.0028639287307809214,
    0.00289246751352137,
    0.003140226399991661,
    0.0020975830002498697,
    0.0028612920714294887,
    0.002764162428450488,
    0.002764162428450488,
    0.002748223714271652,
    0.0022683470000022985,
    0.002775594111072779,
    0.002775594111072779,
    0.0028728040799978773,
    0.0027666425000158292,
    0.0024977040000824977,
    0.0024977040000824977,
    0.0017114324996327923,
    0.0028094019999116426,
    0.0028988896829327043,
    0.0028988896829327043,
    0.0028916881999975887,
    0.002844709387083581,
    0.002814305250012694,
    0.0027457156000309626,
    0.002476881000196348,
    0.002829846928567089,
    0.002829846928567089,
    0.002754700857102372,
    0.002754700857102372,
    0.002754700857102372,
    0.0020814459999201063,
    0.002545174000260886,
    0.0026858780001930427,
    0.002540355999371968,
    0.002540355999371968,
    0.0028357938571649094,
    0.0028357938571649094,
    0.0028842244912180163,
    0.0029031848904096853,
    0.002793479285693528,
    0.0020216820003042812,
    0.0028643564666102368,
    0.002822035444397544,
    0.0029218772394453713,
    0.0029218772394453713,
    0.002856560478231467,
    0.002681168250092014,
    0.0025463343332982427,
    0.0028549411250082812,
    0.0018799650000194863,
    0.0028206184375108023,
    0.0028202844999213996,
    0.0027463695714686764,
    0.0028274505454067944,
    0.0026425770001878846,
    0.00284075338888417,
    0.002798597285618598,
    0.0026070468334182806,
    0.002880547962983352,
    0.0027501517777434653,
    0.0027501517777434653,
    0.0027183090002533086,
    0.0028204650001498522,
    0.002883616360013548,
    0.002883616360013548,
    0.0028900973148261577,
    0.002906611555545169,
    0.0025643230001151096,
    0.0030377468421025505,
    0.0025923713331697704,
    0.0025923713331697704,
    0.0029598388297946508,
    0.002410636333479488,
    0.0028355167646890657,
    0.0028355167646890657,
    0.0028520832631425278,
    0.002881304030311047,
    0.002730528000029153,
    0.002472418333278862,
    0.0027175973332305148,
    0.002847641142839815,
    0.0017814564998843707,
    0.0018457329997545457,
    0.0026506649999191723,
    0.0024576727500971174,
    0.002857451892850804,
    0.0019052776666891684,
    0.002797028299937665,
    0.0026913831110909493,
    0.0028477229333172243,
    0.002899456741913802,
    0.002782955999969595,
    0.003337246999990384,
    0.0026504916667262376,
    0.0028784371111046144,
    0.00288596258024758,
    0.0027367403749849473,
    0.0027367403749849473,
    0.002708988499989573,
    0.0022723619995304034,
    0.0014964485003474692,
    0.0015788500004418893,
    0.002837378538410681,
    0.0024018311666319883,
    0.0028731986571334084,
    0.0028809979056739327,
    0.002841492545402699,
    0.0027493150000736932,
    0.0028370073846067847,
    0.0028855056571306446,
    0.002773924142924703,
    0.002800412545432416,
    0.00271555950007496,
    0.00271555950007496,
    0.0027367604286285185,
    0.0025851553333874713,
    0.0027732583000215525,
    0.002246301249897442,
    0.002694231833326436,
    0.0028069824000340306,
    0.0027586742223017304,
    0.003393405799943139,
    0.0028816795500006265
  ],
  "generated_texts": [
    "\u0a47<|vq_clip",
    "<|",
    "<|vq_clip_12273",
    "est<|vq_clip_12273|>",
    "<|vq",
    "<|vq_clip_12273|>this is a screenshot of a code editor with a python script. the script is written in a dark theme and has a line of code",
    "<|vq_clip_12273|>this is",
    " 0.0.0.0.",
    "S<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo of",
    "<|vq_clip_12273|>",
    "\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd ",
    "<|vq_clip_12273|",
    "<|vq_clip_12273|>this image displays a list of items in a table format. the items are listed in a column with a header that reads \"item name",
    "",
    "<|vq_clip_12273|>this is a screenshot of a code editor with",
    "<|vq_clip_122",
    "<|vq_clip_12273|>this image displays a list of items in a table format.",
    "<|vq_clip_12273|>this is a screenshot of a",
    "\u0e32<|vq",
    "<|",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging platform.",
    "<|vq_clip_12273|>this image displays a list of items in a table format. the items include \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c",
    "<|vq_clip_12273|>",
    "\u0c41<|vq_clip_12273|>this is a",
    "\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd ",
    "<|vq_clip_12273|>",
    "ftop<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo of a person named \"sara\" and the other user is responding",
    "<|vq_clip_12273|>this is a",
    "<|vq_clip_12273|>this is a screenshot of a code editor with a python script. the script is written",
    "<|vq_clip_12273|>this image displays a list of items in a table format. the items are listed in a column, with each item having a different color.",
    " remainder<|vq_clip_12273|>this is a screenshot of a code editor with a python script.",
    "<|",
    "<|vq_clip_12273|>this is a screenshot of",
    "<|vq_clip_12273|",
    "<",
    "<|vq_clip_12273|",
    "<|vq_clip",
    "<|vq_clip_12273|>",
    "<",
    "ElementException<|vq_clip_12273|>this is a screenshot of a code editor with a python script. the script is written in a dark theme and has a black background. the code is displayed in a white font with a black background",
    "<|vq_clip_12273",
    "<|vq_clip_12273",
    "<",
    "<|vq",
    "/\n\nIt seems like your message got",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging platform. the user is asking for a screenshot of a conversation between two users. the user is",
    " ",
    "<|vq_clip_12273|>this image displays a list of items in a table format. the items are labeled as \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo",
    "<|vq_clip_12273|>",
    "<|vq_clip_122",
    "\u0d28<|vq",
    " \n\nIt seems like your message got garbled or mixed up with",
    "<",
    "ent",
    "<|vq_clip_12273|",
    "<",
    " ",
    "<|vq",
    "<|vq_clip",
    " \ufffd 1",
    "ail",
    "<",
    "<|vq_clip_12273|>this is a screenshot of",
    "<|vq_clip_12273|>this is a screenshot of a website that displays a list of products. the page is divided into two sections, with the left side showing a list of products and the right side showing a list of products. the left side has a search bar",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo of a person named \"sara\" and the other user is responding with a photo of a woman. the conversation is in a casual tone, with the user asking for a photo of a person named \"s",
    "<|vq_clip_12273|",
    "<|",
    "plogin \n\nIt seems like your message got a bit garbled",
    "<|vq_clip_12273|>",
    "<|vq_clip_12273|>this is a screenshot of a code editor with a python script. the script is written in a dark theme and contains a function that calculates the sum of two numbers. the code editor has a dark background with a dark theme. the script is written in a dark theme and contains a function that calculates the sum of",
    "<",
    "<|vq_clip_12273|>this code snippet is from a python script that is used to create a",
    "<|vq_clip_",
    "<|vq_clip",
    "String 1.0.0.0.0.0.0.0",
    "<|vq_clip",
    "<|vq_clip_12273|>this image displays a list of ",
    "<|vq_clip_12273|>this",
    "<|vq_clip_12273|",
    "w<|vq_clip_12273|>this",
    "<|vq_clip_",
    "\u7528<|vq_clip_12273|>this is a screenshot of a conversation between",
    "<|vq_clip_12273|",
    " \n\n[END OF RESPONSE",
    "<|vq_clip_12273|>this is a screenshot of a code editor with a python script. the script is a function",
    "<|vq_clip_12273|>",
    "<",
    "our<|vq",
    "<|vq_clip_122",
    " \n\nIt seems like your message got garbled or mixed up with a lot of unrelated text. If you have a specific",
    "",
    "<|vq_clip_12273|>this image displays a list of items in a shopping cart. the items include a 3d printer, a 3d printer, a 3d printer, a 3d printer, a 3d printer,",
    "rough 1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0",
    "ages ",
    "<|vq_clip_12273|>this image displays a list of items in a table format. the items are listed in a column with the name \"item\" and the quantity \"1\". the table also includes a column for the item name and the quantity. the items are listed in a column with the name \"item\" and the quantity \"1\". the table also",
    "<|vq_clip",
    "i",
    " \n\nIt seems like your message got garbled or mixed up with a lot of unrelated text. If you have a specific question or need help with something, feel free to clarify or ask again!\n\nIt looks like your message got",
    "\u17b6<|vq",
    "\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd ",
    "<",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo of a",
    "<|vq_clip_",
    "<|vq_clip_12273",
    "igung<|vq_clip_122",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a",
    " ",
    "<|vq",
    "<|vq_clip_12273|>",
    "<|vq_clip_",
    "<|vq_clip_12273|>this image displays a list of 10 items in a table format. the first item is \"",
    " \n\nIt",
    "```\n\nIt seems like your message got garbled or",
    "<|vq_clip_12273|>",
    "<|vq_clip_12273|>this is a screenshot of a",
    " 1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0",
    "<|vq_clip_12273|>",
    "<|vq_clip_12273|>",
    "<|vq_clip_12273|>",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo of a person named \"sara\" and the other user is responding with a photo of a woman. the conversation",
    "<|vq_clip_12273|>this is a screenshot of a code editor with a python script. the script is written in a dark theme and contains a function called \"get_2d_array\". the function takes in a list of numbers and returns a 2d array of the same size. the script also contains a function called \"get_2d_array\" that takes in a list",
    "<|vq_clip_12273|>",
    "<",
    "<|vq_clip_",
    "<|",
    " ",
    "ery<",
    "<|vq_clip_12273|>this image displays a",
    "<|vq_clip_12273",
    "<|vq_clip_12273|>this is a screenshot of a website that displays a list of products. the page is divided into two sections, with the left side",
    "let<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging platform. the user is asking for a code to be added to a website, and the other user is responding with a message that says \"i'm",
    "<|vq_clip_12273|>this is",
    "<|vq_clip_",
    "<|vq_clip_12273|>this code snippet is",
    " \n\n  1. **\"The Power of a Good Night's Sleep\"**  \n     *Why it works:* This title taps into the universal desire for better health",
    " \ufffd<|vq_clip_",
    "<|vq_clip_12273|>this is",
    "<|vq_clip_",
    "",
    "<|vq_clip_12273|",
    "<|vq_clip",
    "<|vq_clip_12273|>this",
    " 2019 ",
    "<|vq_clip_12273",
    "<|vq_clip_12273|>this",
    "<|vq_clip_12273|>",
    "<|vq_clip_122",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo of a person named \"sara\" and"
  ],
  "errors": [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Traceback (most recent call last):\n  File \"/home/azureuser/powertrace-sim/client/backend_request_func.py\", line 296, in async_request_openai_completions\n    async for chunk_bytes in response.content:\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 52, in __anext__\n    rv = await self.read_func()\n         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 352, in readline\n    return await self.readuntil()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 380, in readuntil\n    raise ValueError(\"Chunk too big\")\nValueError: Chunk too big\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Traceback (most recent call last):\n  File \"/home/azureuser/powertrace-sim/client/backend_request_func.py\", line 296, in async_request_openai_completions\n    async for chunk_bytes in response.content:\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 52, in __anext__\n    rv = await self.read_func()\n         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 352, in readline\n    return await self.readuntil()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 380, in readuntil\n    raise ValueError(\"Chunk too big\")\nValueError: Chunk too big\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Traceback (most recent call last):\n  File \"/home/azureuser/powertrace-sim/client/backend_request_func.py\", line 296, in async_request_openai_completions\n    async for chunk_bytes in response.content:\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 52, in __anext__\n    rv = await self.read_func()\n         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 352, in readline\n    return await self.readuntil()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 380, in readuntil\n    raise ValueError(\"Chunk too big\")\nValueError: Chunk too big\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ],
  "request_timestamps": [
    1759948249.7785153,
    1759948260.1748998,
    1759948261.6609378,
    1759948263.75321,
    1759948267.76863,
    1759948276.597103,
    1759948278.8959422,
    1759948289.4166293,
    1759948293.0077813,
    1759948295.2753634,
    1759948298.8706017,
    1759948300.6458163,
    1759948304.9316723,
    1759948316.052433,
    1759948318.1140065,
    1759948318.2830796,
    1759948334.9765356,
    1759948337.3609474,
    1759948348.4648821,
    1759948352.9269173,
    1759948354.1824489,
    1759948357.5256684,
    1759948370.0906572,
    1759948370.6059813,
    1759948371.8452168,
    1759948372.1926227,
    1759948377.9961822,
    1759948378.1082952,
    1759948378.6927779,
    1759948379.8858125,
    1759948388.093721,
    1759948388.877495,
    1759948391.151141,
    1759948392.7294354,
    1759948396.2399356,
    1759948407.2883441,
    1759948418.610482,
    1759948418.8071523,
    1759948422.441744,
    1759948431.3428237,
    1759948437.4649704,
    1759948438.3740523,
    1759948444.2135675,
    1759948445.0148811,
    1759948454.1881676,
    1759948454.21918,
    1759948454.6092365,
    1759948458.466123,
    1759948460.3995922,
    1759948460.804027,
    1759948477.6088207,
    1759948486.6841283,
    1759948487.9485998,
    1759948490.520063,
    1759948493.1423368,
    1759948495.9811578,
    1759948509.6763704,
    1759948510.0920637,
    1759948510.2539222,
    1759948512.903081,
    1759948515.358845,
    1759948516.4310315,
    1759948516.6721816,
    1759948517.2105448,
    1759948524.9883623,
    1759948527.0296032,
    1759948528.9615164,
    1759948529.0443249,
    1759948530.930912,
    1759948535.291559,
    1759948539.2019305,
    1759948549.0370715,
    1759948553.480663,
    1759948555.057387,
    1759948556.5723336,
    1759948563.7926698,
    1759948569.7344372,
    1759948571.0545151,
    1759948576.069705,
    1759948579.3661537,
    1759948581.421721,
    1759948584.4493408,
    1759948584.7959096,
    1759948589.2070673,
    1759948589.3439016,
    1759948598.139731,
    1759948602.7131083,
    1759948611.5946906,
    1759948611.61152,
    1759948622.686814,
    1759948641.788169,
    1759948661.164088,
    1759948662.914324,
    1759948670.473278,
    1759948676.3619523,
    1759948681.4962122,
    1759948685.4878538,
    1759948686.9613595,
    1759948690.0732927,
    1759948691.325262,
    1759948691.3592145,
    1759948691.4759505,
    1759948692.0854816,
    1759948695.0164073,
    1759948695.986717,
    1759948697.8319123,
    1759948698.0941448,
    1759948707.7809055,
    1759948716.447936,
    1759948725.543097,
    1759948727.1451726,
    1759948732.1799986,
    1759948734.3758228,
    1759948735.8333302,
    1759948736.1128323,
    1759948738.3282037,
    1759948740.2760596,
    1759948740.9789023,
    1759948742.7330503,
    1759948743.0966043,
    1759948751.3087392,
    1759948755.735379,
    1759948756.5694065,
    1759948766.5926552,
    1759948770.0625036,
    1759948772.5345726,
    1759948776.6262896,
    1759948777.7945569,
    1759948781.0432017,
    1759948781.5720522,
    1759948782.4600337,
    1759948785.3545384,
    1759948785.762298,
    1759948793.4188218,
    1759948795.4321268,
    1759948796.4901435,
    1759948800.0234332,
    1759948805.5144866,
    1759948812.7455933,
    1759948813.488194,
    1759948818.1386287,
    1759948833.2355917,
    1759948836.973333,
    1759948838.550429,
    1759948845.0678248,
    1759948852.2974446,
    1759948854.448741
  ],
  "mean_ttft_ms": 28.48823244899521,
  "median_ttft_ms": 22.69095599967841,
  "std_ttft_ms": 14.850952981958336,
  "p99_ttft_ms": 67.5550572400243,
  "mean_tpot_ms": 2.676252335503391,
  "median_tpot_ms": 2.7934307142589074,
  "std_tpot_ms": 0.3230047441931835,
  "p99_tpot_ms": 3.031885920126251,
  "mean_itl_ms": 2.8469868424224516,
  "median_itl_ms": 2.9072219995214255,
  "std_itl_ms": 0.43547508625616527,
  "p99_itl_ms": 3.4406552801010535
}