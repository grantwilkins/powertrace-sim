{
  "date": "20251009-120159",
  "backend": "vllm",
  "model_id": "openai/gpt-oss-20b",
  "tokenizer_id": "openai/gpt-oss-20b",
  "num_prompts": 19,
  "tensor_parallel_size": 8,
  "request_rate": 0.0625,
  "burstiness": 1.0,
  "max_concurrency": null,
  "duration": 345.38619729200036,
  "completed": 19,
  "total_input_tokens": 12081,
  "total_output_tokens": 1410,
  "request_throughput": 0.05501088390031059,
  "request_goodput:": null,
  "output_throughput": 4.082386647338838,
  "total_token_throughput": 39.06062287889948,
  "input_lens": [
    897,
    281,
    460,
    1345,
    979,
    87,
    449,
    176,
    2652,
    284,
    226,
    689,
    382,
    222,
    292,
    266,
    713,
    1420,
    261
  ],
  "output_lens": [
    16,
    45,
    54,
    101,
    69,
    534,
    12,
    28,
    21,
    127,
    35,
    75,
    33,
    20,
    14,
    128,
    17,
    26,
    55
  ],
  "ttfts": [
    0.012461653999707778,
    0.01605948299948068,
    0.018384912000328768,
    0.022622185000727768,
    0.01809131600020919,
    0.01437517799968191,
    0.017209620000357972,
    0.014093021000007866,
    0.027123967000079574,
    0.018980758000907372,
    0.01336676000028092,
    0.015950791999784997,
    0.015354857001511846,
    0.015961450000759214,
    0.016265615999145666,
    0.01651884100101597,
    0.015510059000007459,
    0.019220195999878342,
    0.015502984999329783
  ],
  "itls": [
    0.0024025383333840483,
    0.002413091772723419,
    0.002371456622639462,
    0.0025408261799930187,
    0.0026132022205863047,
    0.0023369671482153043,
    0.00239533863648169,
    0.0024377983703474187,
    0.002452809499936848,
    0.002332675142858375,
    0.002307796382357243,
    0.0024602622432310555,
    0.0025308987187599996,
    0.0023526171052684446,
    0.0023017934615311856,
    0.002368480645657648,
    0.002333350687422353,
    0.002396089079993544,
    0.0023575874073921347
  ],
  "generated_texts": [
    "<|vq_clip_12273|>this is a screenshot of a",
    "<|vq_clip_12273|>this image displays a list of 10 items in a table format. the first item is a \"c\" and the second item is a \"c\" with a \"c",
    "<|vq_clip_12273|>this image displays a list of 10 items in a table format. the first item is \"1. 2. 3. 4. 5. 6. 7. 8. 9",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo of a person named \"sara\" and the other user is responding with a photo of a woman. the conversation is in a language that appears to be in a mix of english and hindi. the user is asking for a photo of a person named \"sara\" and the other user is responding with a photo of a woman. the conversation",
    "<|vq_clip_12273|>this image displays a list of 10 items that are being used in a project. the first item is a \"c\" and the second item is a \"c\". the third item is a \"c\" and the fourth item is a \"c\". the fifth item is a \"c\"",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo of a person named \"sara\" and the other user is responding with a photo of a woman. the conversation is in a language that appears to be in a different script, possibly a mix of english and hindi. the user is asking for a photo of a person named \"sara\" and the other user is responding with a photo of a woman. the conversation is in a language that appears to be in a different script, possibly a mix of english and hindi. the user is asking for a photo of a person named \"sara\" and the other user is responding with a photo of a woman. the conversation is in a language that appears to be in a different script, possibly a mix of english and hindi. the user is asking for a photo of a person\n\nIt seems like you're looking for a way to create a custom `TextField` in SwiftUI that includes a placeholder and a clear button. Here's a simple example of how you can achieve this:\n\n```swift\nimport SwiftUI\n\nstruct CustomTextField: View {\n    @Binding var text: String\n    var placeholder: String\n\n    var body: some View {\n        HStack {\n            TextField(placeholder, text: $text)\n                .textFieldStyle(RoundedBorderTextFieldStyle())\n            if !text.isEmpty {\n                Button(action: {\n                    self.text = \"\"\n                }) {\n                    Image(systemName: \"xmark.circle.fill\")\n                        .foregroundColor(.gray)\n                }\n            }\n        }\n    }\n}\n\nstruct ContentView: View {\n    @State private var inputText: String = \"\"\n\n    var body: some View {\n        CustomTextField(text: $inputText, placeholder: \"Enter text\")\n            .padding()\n    }\n}\n\n@main\nstruct MyApp: App {\n    var body: some Scene {\n        WindowGroup {\n            ContentView()\n        }\n    }\n}\n```\n\nIn this example, the `CustomTextField` view takes a binding to a `String` and a placeholder text. It uses a `TextField` with a rounded border style and adds a clear button that appears when the text is not empty. The clear button clears the text when tapped.\n\nIt looks like you're looking for a way to create a custom `TextField` in SwiftUI that includes a placeholder and a clear button. Here's a simple example of how you can achieve this:\n\n```swift\nimport SwiftUI\n\nstruct CustomTextField: View {\n    @Binding var text:",
    "<|vq_clip_12273|>this image",
    "lag<|vq_clip_12273|>this image displays a list of 10 items, each with a different color and shape",
    "<|vq_clip_12273|>this is a screenshot of a website that displays a list",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging platform. the user is asking for a translation of a phrase in a different language. the user is also asking for a translation of a phrase in a different language. the user is also asking for a translation of a phrase in a different language. the user is also asking for a translation of a phrase in a different language. the user is also asking for a translation of a phrase in a different language. the user is also asking for a translation of a phrase in a different language. the user is also\n\nIt seems",
    "```\n\nThis is a very long and complex code snippet that appears to be a mix of different programming languages and syntax. It is not clear what the intended purpose or functionality of",
    "<|vq_clip_12273|>this image displays a list of items in a shopping cart. the items include a 3d printer, a 3d printer, a 3d printer, a 3d printer, a 3d printer, a 3d printer, a 3d printer, a 3d printer, a ",
    "<|vq_clip_12273|>this is a screenshot of a code editor with a python script. the script is written in a dark theme and contains",
    "<|vq_clip_12273|>this image displays a list of items in a shopping",
    "<|vq_clip_12273|>this is a screenshot",
    "<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging app. the user is asking for a photo of a person named \"sara\" and the other user is responding with a photo of a woman with a black hair. the user is also asking for a photo of a person named \"sara\" and the other user is responding with a photo of a woman with a black hair. the conversation appears to be in a casual tone, with the user asking for a photo of a person named \"sara\" and the other user responding with a photo of a woman with a",
    "<|vq_clip_12273|>this image displays a list of items",
    " \ufffd<|vq_clip_12273|>this is a screenshot of a conversation between two users on a messaging",
    "IRONMENT \n\n**Note**: The above text is a mixture of multiple languages and appears to be a result of a corrupted or incorrectly processed input. It does not provide a coherent or meaningful response. If you have a specific question or need assistance with a particular topic,"
  ],
  "errors": [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ],
  "request_timestamps": [
    1760010973.985382,
    1760010992.674691,
    1760011026.6988583,
    1760011066.8052816,
    1760011070.718643,
    1760011084.0544996,
    1760011116.1399086,
    1760011127.529841,
    1760011167.3486521,
    1760011208.0270665,
    1760011209.415687,
    1760011214.6293042,
    1760011214.7784033,
    1760011244.3664372,
    1760011261.0534437,
    1760011290.543357,
    1760011295.4701917,
    1760011303.596988,
    1760011316.4836013
  ],
  "mean_ttft_ms": 17.00282368437911,
  "median_ttft_ms": 16.05948299948068,
  "std_ttft_ms": 3.29472164295642,
  "p99_ttft_ms": 26.313646240196253,
  "mean_tpot_ms": 2.405545423913599,
  "median_tpot_ms": 2.395304545478377,
  "std_tpot_ms": 0.0817088790709474,
  "p99_tpot_ms": 2.600170446552254,
  "mean_itl_ms": 2.3881427706641585,
  "median_itl_ms": 2.3746799997752532,
  "std_itl_ms": 0.18165274652793742,
  "p99_itl_ms": 2.9094244991938463
}