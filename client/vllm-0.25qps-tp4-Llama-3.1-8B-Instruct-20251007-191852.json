{
  "date": "20251007-191852",
  "backend": "vllm",
  "model_id": "meta-llama/Llama-3.1-8B-Instruct",
  "tokenizer_id": "meta-llama/Llama-3.1-8B-Instruct",
  "num_prompts": 150,
  "tensor_parallel_size": 4,
  "request_rate": 0.25,
  "burstiness": 1.0,
  "max_concurrency": null,
  "duration": 593.5153664850004,
  "completed": 148,
  "total_input_tokens": 726048,
  "total_output_tokens": 2425,
  "request_throughput": 0.24936169871473804,
  "request_goodput:": null,
  "output_throughput": 4.085825130967836,
  "total_token_throughput": 1227.386923971766,
  "input_lens": [
    13911,
    3103,
    5864,
    16384,
    15588,
    681,
    15526,
    1691,
    1783,
    3138,
    2341,
    9894,
    10331,
    31546,
    3255,
    2884,
    10337,
    1594,
    2819,
    780,
    120,
    4100,
    10588,
    883,
    16384,
    403,
    2101,
    1626,
    10786,
    10059,
    2369,
    3028,
    752,
    226,
    1362,
    2373,
    7733,
    7499,
    1304,
    1432,
    630,
    16862,
    305,
    16384,
    1140,
    1234,
    503,
    4699,
    338,
    1581,
    746,
    3058,
    1139,
    545,
    1937,
    3200,
    2149,
    2786,
    994,
    1340,
    953,
    1345,
    816,
    299,
    2428,
    1284,
    332,
    3324,
    736,
    2115,
    12992,
    2302,
    6997,
    513,
    3110,
    940,
    18505,
    1057,
    1418,
    2125,
    554,
    5382,
    3335,
    368,
    10270,
    16082,
    7307,
    1639,
    615,
    6373,
    1282,
    20978,
    2512,
    5850,
    2957,
    4346,
    2021,
    14249,
    2297,
    3109,
    15858,
    453,
    493,
    5804,
    549,
    16384,
    1267,
    878,
    16384,
    10183,
    15588,
    5413,
    774,
    16335,
    1488,
    10260,
    5664,
    14948,
    3926,
    5510,
    16645,
    596,
    2774,
    8595,
    930,
    1694,
    1238,
    15278,
    4186,
    3128,
    17310,
    3616,
    951,
    2069,
    992,
    4205,
    3767,
    1589,
    3089,
    600,
    22636,
    3240,
    2400,
    4017,
    16384,
    5647,
    732,
    6827,
    469,
    1202
  ],
  "output_lens": [
    5,
    2,
    7,
    50,
    3,
    37,
    12,
    9,
    34,
    9,
    3,
    8,
    37,
    0,
    19,
    6,
    22,
    16,
    4,
    2,
    3,
    51,
    9,
    14,
    31,
    9,
    48,
    13,
    27,
    38,
    27,
    2,
    15,
    8,
    1,
    8,
    4,
    30,
    1,
    51,
    7,
    7,
    1,
    3,
    8,
    42,
    1,
    46,
    32,
    9,
    6,
    4,
    15,
    1,
    1,
    8,
    1,
    4,
    3,
    4,
    2,
    1,
    1,
    15,
    58,
    7,
    8,
    2,
    16,
    10,
    72,
    1,
    24,
    5,
    4,
    17,
    4,
    17,
    11,
    8,
    12,
    5,
    5,
    8,
    7,
    28,
    41,
    1,
    4,
    6,
    26,
    67,
    55,
    37,
    5,
    77,
    4,
    1,
    48,
    4,
    18,
    1,
    3,
    34,
    5,
    7,
    7,
    22,
    4,
    3,
    9,
    5,
    29,
    4,
    11,
    45,
    16,
    32,
    45,
    22,
    19,
    55,
    82,
    9,
    1,
    5,
    2,
    8,
    2,
    14,
    7,
    36,
    54,
    12,
    5,
    14,
    36,
    8,
    12,
    5,
    0,
    8,
    4,
    11,
    5,
    7,
    11,
    22,
    6,
    41
  ],
  "ttfts": [
    0.04457401400031813,
    0.02558004100137623,
    0.03019904599932488,
    0.06212866100031533,
    0.06347825800003193,
    0.016937782000240986,
    0.0506186170005094,
    0.018839656999261933,
    0.016008122998755425,
    0.022564192999197985,
    0.023616245000084746,
    0.04656431400144356,
    0.045963202999701025,
    0.0,
    0.02435097000125097,
    0.023687074000918074,
    0.04566203700051119,
    0.018975357999806874,
    0.023196394000478904,
    0.01702965999902517,
    0.012003305999314762,
    0.028337633000774076,
    0.048912865000602324,
    0.014659095999377314,
    0.059787367999888374,
    0.015889619000517996,
    0.019702470999618527,
    0.01853543700053706,
    0.0489848510005686,
    0.043663338999976986,
    0.02158034399872122,
    0.021643657000822714,
    0.019027121001272462,
    0.01209721399936825,
    0.017095487999540637,
    0.021155640999495517,
    0.040099089999785065,
    0.03667012799996883,
    0.017816559000493726,
    0.020425241000339156,
    0.014927107000403339,
    0.08704558200042811,
    0.01554141199994774,
    0.0655549200000678,
    0.01933696299965959,
    0.018145286998333177,
    0.01601198599928466,
    0.02855508699940401,
    0.013970187001177692,
    0.015720695000709384,
    0.013956639000753057,
    0.023076715999195585,
    0.01740586699997948,
    0.015687482000430464,
    0.01963391900062561,
    0.026797201000590576,
    0.017123638999692048,
    0.020831121000810526,
    0.01681404500050121,
    0.019123197998851538,
    0.016628273000605986,
    0.019551553999917815,
    0.016747433999626082,
    0.013217806999819004,
    0.021158559999093995,
    0.01780502899964631,
    0.014236680999601958,
    0.02542256900051143,
    0.015936019999571727,
    0.018643411000084598,
    0.05576781099989603,
    0.023638894999749027,
    0.03720794499895419,
    0.013819505000356003,
    0.024981083999591647,
    0.014443366999330465,
    0.06158379499902367,
    0.018216426999060786,
    0.018750646000626148,
    0.021914179000305012,
    0.014145746999929543,
    0.033183321998876636,
    0.02414064100048563,
    0.013468207000187249,
    0.04774899599942728,
    0.06319595300010405,
    0.04061708199878922,
    0.01851902000089467,
    0.01576758000010159,
    0.03572771300059685,
    0.016594912000073236,
    0.07802834199901554,
    0.024535362001188332,
    0.030984925000666408,
    0.025231514999177307,
    0.027827547999550006,
    0.02136150400110637,
    0.05015355700015789,
    0.02008806000048935,
    0.024149665001459653,
    0.06288645199856546,
    0.01489630400101305,
    0.012932207000631024,
    0.03524965699944005,
    0.012815428999601863,
    0.05884566100030497,
    0.018938115001219558,
    0.016460349999761092,
    0.08672083300007216,
    0.043529990000024554,
    0.06262805500045943,
    0.028856326000095578,
    0.01778062400080671,
    0.055566278999322094,
    0.020494028000030085,
    0.048146828999961144,
    0.02737348499977088,
    0.07258012000056624,
    0.031844368000747636,
    0.03120253999986744,
    0.056688922999455826,
    0.016608051999355666,
    0.023111558999517,
    0.034113227999114315,
    0.015146521998758544,
    0.01652580599875364,
    0.019334102000357234,
    0.05750842899942654,
    0.022748569999748725,
    0.025439879998884862,
    0.06541375200140465,
    0.02598462800051493,
    0.017043661000570864,
    0.021565949000432738,
    0.014510887000142247,
    0.02615122600036557,
    0.027575775000514113,
    0.019700790999195306,
    0.023432277001120383,
    0.015498071001275093,
    0.0,
    0.025986193999415264,
    0.019085191999693052,
    0.027742042000681977,
    0.05809409100038465,
    0.03437094900073134,
    0.01670372800072073,
    0.035198767998736,
    0.015281830999811064,
    0.017564726000273367
  ],
  "itls": [
    0.0024667924999448587,
    0.0023713790014880942,
    0.002848984999824703,
    0.0031370557346829682,
    0.001937131999511621,
    0.0029242712222286274,
    0.0029485750909026883,
    0.002858145999880435,
    0.002936113787875387,
    0.002841621000015948,
    0.002695937499993306,
    0.002855805428615505,
    0.003073436055526852,
    0.003073436055526852,
    0.002932851888949194,
    0.0028919517997564982,
    0.0030222713809226185,
    0.0029405958666757215,
    0.002512998000383959,
    0.002558228001362295,
    0.0026837590003196965,
    0.00297869615998934,
    0.00289054137488165,
    0.002909320692336993,
    0.0030990758332942884,
    0.00293248399998447,
    0.0029501880000022173,
    0.002892255249965577,
    0.0030550665384837953,
    0.0030516187837968793,
    0.0029528467691936665,
    0.00215125300019281,
    0.002866927642831537,
    0.002820068571444218,
    0.002820068571444218,
    0.0028301454286910094,
    0.002414689666693448,
    0.0029810890000276386,
    0.0029810890000276386,
    0.0029436406600143526,
    0.002808750999975018,
    0.0026962921668503745,
    0.0026962921668503745,
    0.001550026000586513,
    0.002860592428468018,
    0.002942630634140919,
    0.002942630634140919,
    0.002982786733345064,
    0.002943165935463302,
    0.0028590064998752496,
    0.002748953199989046,
    0.002912166333165563,
    0.002932463285755408,
    0.002932463285755408,
    0.0028550907144173315,
    0.0028550907144173315,
    0.0028550907144173315,
    0.002612361666858002,
    0.002569399500316649,
    0.002759644333612717,
    0.0026316719995520543,
    0.0026316719995520543,
    0.002959627928638448,
    0.002959627928638448,
    0.0029515268771846373,
    0.0030392368331983257,
    0.002917471714161885,
    0.0022414180002670037,
    0.0029389860666318175,
    0.0028447542222743826,
    0.003134892352123566,
    0.003134892352123566,
    0.0029843184782531234,
    0.0027251262499703444,
    0.002650576333811235,
    0.0029005773124026746,
    0.0022635113333914583,
    0.002940022812595089,
    0.0028853353000158678,
    0.0028574734286459197,
    0.0029444283635794736,
    0.002802621249884396,
    0.002877800250189466,
    0.0030533282855945538,
    0.0027581486665440025,
    0.0030759749630238664,
    0.0030124667000109183,
    0.0030124667000109183,
    0.0028345076667998606,
    0.0027649316001770786,
    0.0029241111200099114,
    0.0031797487575783057,
    0.0029504789999919012,
    0.0029936781944444294,
    0.0027737264999814215,
    0.002971147381566353,
    0.002715550666228713,
    0.002715550666228713,
    0.0029509178723256288,
    0.002692594999947081,
    0.0030398776470974553,
    0.0030398776470974553,
    0.0027010730000256444,
    0.00298776045455077,
    0.00279295300015292,
    0.002683484499963621,
    0.002835500833195207,
    0.0029221859523594113,
    0.0022468883331991187,
    0.0017869150005935808,
    0.0028705231250114593,
    0.00268366749969573,
    0.002925306285695634,
    0.0023743793329534433,
    0.0028945899999598622,
    0.003067842818175202,
    0.0029513885999525274,
    0.0030760863225417954,
    0.0030261223636526583,
    0.003213559800042276,
    0.002964731611124686,
    0.002920904574070678,
    0.00294816565431653,
    0.002802720500085343,
    0.002802720500085343,
    0.0027423277497291565,
    0.0024142160000337753,
    0.0027666452858414103,
    0.0025761159995454364,
    0.002890081615427894,
    0.0027076216665591346,
    0.002984595942845252,
    0.0029376166980995856,
    0.002890238999911658,
    0.0028081210002710577,
    0.0029000876153217037,
    0.0029662317428509207,
    0.0028632441426452715,
    0.0028773733635964823,
    0.0027905135002583847,
    0.0027905135002583847,
    0.0028898321428901647,
    0.0026219459996355,
    0.002875922199928027,
    0.0024483142501594557,
    0.0028470533334257198,
    0.0028786412000044947,
    0.0029917913809532322,
    0.0028952271997695787,
    0.0029279719250098423
  ],
  "generated_texts": [
    "\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_",
    "\r\n\t\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\t\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "  } else {\n    return \"Error:",
    "\ufffdassistant",
    "\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u0639\u06a9\u0633\u06cc\u0644\u0631\u06a9",
    "\r\n\t\ufffd.text\r\n\t\ufffd.text\r\n\t\ufffd.text\r\n\t\ufffd.text\r\n\t",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\ufffd_",
    "\r\n\t",
    "\ufffdassistant",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\r\n<|reserved_special_token_194|>I apologize, but",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "]_systeem\n```\n",
    "",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_",
    "\r\n  -_c\r\n  -_c\r\n  -_c",
    "\t\t\ufffd_\ufffd_\ufffd_",
    "\r\n",
    "\r\n \t\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u0432",
    "us\r\n\t\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "<|reserved_special_token_173",
    "",
    "ate",
    "\ufffd.m",
    "\r\n\t\t\ufffd_\ufffd_",
    "",
    "\u0432",
    "\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m",
    "ivier\n\t\t//\t\t//\t\t//\t\t//\t\t//\t\t//\t\t//\t\t//\t\t//\t\t",
    "\r\n \t\ufffd\r\n\t\t\ufffd\r\n",
    "ar\t\t\ufffd_",
    "\r\n\t\t",
    "\ufffd.scalablytypedI apologize, but it seems like the text you provided",
    "\u064e",
    "er",
    "ical\r\n\t\t\ufffd_\ufffd_",
    "\r\n",
    "\r\n\t\t",
    "stitutef",
    "assistant\nIt appears",
    "\t",
    "\t",
    "_",
    "\r\n\t\t\ufffd\r\n\t\t\ufffd\r\n\t\t\ufffd\r\n\t\t",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u044f\u041c\u044b\u043d",
    "itator\ufffd_\ufffd_\ufffd_",
    "\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "ch\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\t// ...",
    "",
    "\r\n    .<|reserved_special_token_123|>I can\u2019t provide a",
    "\ufffd.\ufffd.",
    "\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.",
    "\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.",
    "\r\n\t\t\ufffd\r\n\t\t",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\r\n\t\t}",
    "\n\t\t//\t\t//\t",
    "\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_",
    "\r\n\t\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "",
    "\r\n\t\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "icsubmit",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n",
    "\ufffdassistant",
    "",
    "\ufffd_\ufffd_",
    "\ufffd.\ufffd.\ufffd.",
    "\u015fki\ufffd.\ufffd.",
    "<|reserved_special_token_193|>I apologize, but it seems like the text you provided is a",
    "",
    "\u06a9",
    "\r\n\t\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "\r\n<|reserved_special_token_194|>I apologize, but it seems like the input provided is a jumbled collection of words and phrases",
    "\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd.setPreferredWidth\ufffd.setPreferredWidth\ufffd.setPreferredWidth\ufffd.setPreferredWidth\ufffd.",
    "\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u0161le\u0644\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631",
    "\ufffd.\ufffd.\ufffd.\ufffd.",
    " ",
    "s\t\ufffd_",
    "",
    "\r\n\t\ufffd.get\r\n\t",
    "\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u043d\u043e\u0440\u0435\u0436\u0438\u043c\u044b\u043d",
    "\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "",
    "\u0432\u043e\u0432\u0440\u0435\u043c\u044f\u0432\u043e\u0432\u0440\u0435\u043c\u044f\u0432\u043e\u0432",
    "\r\n\t\t}",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_",
    "\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_",
    "\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432"
  ],
  "errors": [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Traceback (most recent call last):\n  File \"/home/azureuser/powertrace-sim/client/backend_request_func.py\", line 296, in async_request_openai_completions\n    async for chunk_bytes in response.content:\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 52, in __anext__\n    rv = await self.read_func()\n         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 352, in readline\n    return await self.readuntil()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 380, in readuntil\n    raise ValueError(\"Chunk too big\")\nValueError: Chunk too big\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Traceback (most recent call last):\n  File \"/home/azureuser/powertrace-sim/client/backend_request_func.py\", line 296, in async_request_openai_completions\n    async for chunk_bytes in response.content:\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 52, in __anext__\n    rv = await self.read_func()\n         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 352, in readline\n    return await self.readuntil()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 380, in readuntil\n    raise ValueError(\"Chunk too big\")\nValueError: Chunk too big\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ],
  "request_timestamps": [
    1759864138.6568222,
    1759864142.9748788,
    1759864145.3029628,
    1759864145.6495044,
    1759864150.4237309,
    1759864151.525265,
    1759864151.7155619,
    1759864151.9374285,
    1759864152.1874819,
    1759864161.7331562,
    1759864167.1251945,
    1759864176.2886496,
    1759864180.7594838,
    1759864185.209453,
    1759864210.0171623,
    1759864211.8397517,
    1759864214.3640182,
    1759864216.2714627,
    1759864231.836582,
    1759864232.6025438,
    1759864234.2090368,
    1759864238.7929134,
    1759864239.0272236,
    1759864242.8070366,
    1759864245.3713956,
    1759864246.7129326,
    1759864247.8033147,
    1759864250.7226791,
    1759864252.554871,
    1759864254.978507,
    1759864256.627795,
    1759864270.7321022,
    1759864271.3021498,
    1759864271.713794,
    1759864273.4027793,
    1759864276.9981904,
    1759864281.3053565,
    1759864283.3190448,
    1759864312.2832181,
    1759864314.0170572,
    1759864319.1982138,
    1759864323.2011533,
    1759864329.957721,
    1759864344.8912094,
    1759864353.712762,
    1759864359.5019305,
    1759864364.311036,
    1759864365.9362948,
    1759864366.5793483,
    1759864366.8373072,
    1759864367.9542027,
    1759864370.2174308,
    1759864373.1714773,
    1759864379.1136532,
    1759864391.8859658,
    1759864392.3788214,
    1759864392.836483,
    1759864396.397401,
    1759864401.8768358,
    1759864409.4228783,
    1759864420.4222412,
    1759864436.8370872,
    1759864438.8795922,
    1759864440.8038917,
    1759864441.441146,
    1759864446.063804,
    1759864450.3572946,
    1759864458.2815013,
    1759864458.6948233,
    1759864461.484758,
    1759864464.942055,
    1759864466.0613456,
    1759864466.7843084,
    1759864474.6539319,
    1759864474.8889613,
    1759864477.4747236,
    1759864477.9327095,
    1759864480.3795333,
    1759864496.0382867,
    1759864498.2412028,
    1759864506.0486338,
    1759864506.5425153,
    1759864507.8009,
    1759864509.9021394,
    1759864511.9597235,
    1759864516.3976843,
    1759864518.0722775,
    1759864523.0793078,
    1759864527.1785314,
    1759864529.2026432,
    1759864531.5188982,
    1759864535.290889,
    1759864535.5887535,
    1759864542.503401,
    1759864546.7448003,
    1759864551.9289606,
    1759864555.0370965,
    1759864555.482303,
    1759864557.5662737,
    1759864559.6820893,
    1759864561.1924129,
    1759864561.3140185,
    1759864566.683777,
    1759864567.1319993,
    1759864570.9026377,
    1759864575.7342663,
    1759864579.7659981,
    1759864592.6275272,
    1759864593.0268211,
    1759864601.1277006,
    1759864601.2184494,
    1759864604.275238,
    1759864606.3804126,
    1759864609.3262746,
    1759864611.1699498,
    1759864611.999595,
    1759864612.1179512,
    1759864615.006117,
    1759864622.4127495,
    1759864624.304613,
    1759864625.2835925,
    1759864625.624753,
    1759864625.9908397,
    1759864626.980175,
    1759864627.403698,
    1759864628.6393058,
    1759864628.9455316,
    1759864629.1889298,
    1759864636.9585066,
    1759864637.701625,
    1759864640.9534674,
    1759864646.8897846,
    1759864649.3347566,
    1759864649.9974287,
    1759864650.8987126,
    1759864653.1729648,
    1759864656.1754737,
    1759864657.9007468,
    1759864663.98382,
    1759864680.0519454,
    1759864680.1663845,
    1759864689.2240107,
    1759864691.246903,
    1759864699.6630592,
    1759864704.3483493,
    1759864721.859942,
    1759864727.5470254,
    1759864729.3656611
  ],
  "mean_ttft_ms": 29.002277513538157,
  "median_ttft_ms": 22.2391859997515,
  "std_ttft_ms": 16.839514407770736,
  "p99_ttft_ms": 82.63536222957556,
  "mean_tpot_ms": 2.816281953073176,
  "median_tpot_ms": 2.88992224733982,
  "std_tpot_ms": 0.2500098623680326,
  "p99_tpot_ms": 3.1363337883337414,
  "mean_itl_ms": 2.956512239892209,
  "median_itl_ms": 2.9976499990880257,
  "std_itl_ms": 0.381258582346642,
  "p99_itl_ms": 3.51234250001653
}