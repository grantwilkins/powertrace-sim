{
  "date": "20251007-185853",
  "backend": "vllm",
  "model_id": "meta-llama/Llama-3.1-8B-Instruct",
  "tokenizer_id": "meta-llama/Llama-3.1-8B-Instruct",
  "num_prompts": 150,
  "tensor_parallel_size": 4,
  "request_rate": 0.25,
  "burstiness": 1.0,
  "max_concurrency": null,
  "duration": 593.5204252569993,
  "completed": 148,
  "total_input_tokens": 726048,
  "total_output_tokens": 2425,
  "request_throughput": 0.2493595733220382,
  "request_goodput:": null,
  "output_throughput": 4.085790306121234,
  "total_token_throughput": 1227.3764625447643,
  "input_lens": [
    13911,
    3103,
    5864,
    16384,
    15588,
    681,
    15526,
    1691,
    1783,
    3138,
    2341,
    9894,
    10331,
    31546,
    3255,
    2884,
    10337,
    1594,
    2819,
    780,
    120,
    4100,
    10588,
    883,
    16384,
    403,
    2101,
    1626,
    10786,
    10059,
    2369,
    3028,
    752,
    226,
    1362,
    2373,
    7733,
    7499,
    1304,
    1432,
    630,
    16862,
    305,
    16384,
    1140,
    1234,
    503,
    4699,
    338,
    1581,
    746,
    3058,
    1139,
    545,
    1937,
    3200,
    2149,
    2786,
    994,
    1340,
    953,
    1345,
    816,
    299,
    2428,
    1284,
    332,
    3324,
    736,
    2115,
    12992,
    2302,
    6997,
    513,
    3110,
    940,
    18505,
    1057,
    1418,
    2125,
    554,
    5382,
    3335,
    368,
    10270,
    16082,
    7307,
    1639,
    615,
    6373,
    1282,
    20978,
    2512,
    5850,
    2957,
    4346,
    2021,
    14249,
    2297,
    3109,
    15858,
    453,
    493,
    5804,
    549,
    16384,
    1267,
    878,
    16384,
    10183,
    15588,
    5413,
    774,
    16335,
    1488,
    10260,
    5664,
    14948,
    3926,
    5510,
    16645,
    596,
    2774,
    8595,
    930,
    1694,
    1238,
    15278,
    4186,
    3128,
    17310,
    3616,
    951,
    2069,
    992,
    4205,
    3767,
    1589,
    3089,
    600,
    22636,
    3240,
    2400,
    4017,
    16384,
    5647,
    732,
    6827,
    469,
    1202
  ],
  "output_lens": [
    5,
    2,
    7,
    50,
    3,
    37,
    12,
    9,
    34,
    9,
    3,
    8,
    37,
    0,
    19,
    6,
    22,
    16,
    4,
    2,
    3,
    51,
    9,
    14,
    31,
    9,
    48,
    13,
    27,
    38,
    27,
    2,
    15,
    8,
    1,
    8,
    4,
    30,
    1,
    51,
    7,
    7,
    1,
    3,
    8,
    42,
    1,
    46,
    32,
    9,
    6,
    4,
    15,
    1,
    1,
    8,
    1,
    4,
    3,
    4,
    2,
    1,
    1,
    15,
    58,
    7,
    8,
    2,
    16,
    10,
    72,
    1,
    24,
    5,
    4,
    17,
    4,
    17,
    11,
    8,
    12,
    5,
    5,
    8,
    7,
    28,
    41,
    1,
    4,
    6,
    26,
    67,
    55,
    37,
    5,
    77,
    4,
    1,
    48,
    4,
    18,
    1,
    3,
    34,
    5,
    7,
    7,
    22,
    4,
    3,
    9,
    5,
    29,
    4,
    11,
    45,
    16,
    32,
    45,
    22,
    19,
    55,
    82,
    9,
    1,
    5,
    2,
    8,
    2,
    14,
    7,
    36,
    54,
    12,
    5,
    14,
    36,
    8,
    12,
    5,
    0,
    8,
    4,
    11,
    5,
    7,
    11,
    22,
    6,
    41
  ],
  "ttfts": [
    0.048183233999225195,
    0.05620926200026588,
    0.08646384300027421,
    0.24990461400011554,
    0.23391558000002988,
    0.027462172000014107,
    0.21155670300049678,
    0.0375591580004766,
    0.03602640600001905,
    0.05201808800029539,
    0.047835181000664306,
    0.14864844600015203,
    0.154479505999916,
    0.0,
    0.05697095000050467,
    0.05421150799975294,
    0.15447270599997864,
    0.05018696199931583,
    0.05112085400014621,
    0.029012173000410257,
    0.014019270000062534,
    0.06728666199978761,
    0.15727780199995323,
    0.02655743600007554,
    0.24661332100004074,
    0.0184623509994708,
    0.041416812000534264,
    0.03557325000019773,
    0.16265372700036096,
    0.14694629699988582,
    0.04497061300025962,
    0.051454503999593726,
    0.029327602999728697,
    0.013851964000423322,
    0.033057188000384485,
    0.04572468500009563,
    0.11284863699984271,
    0.1076564340000914,
    0.03651037399959023,
    0.04054755299966928,
    0.026391241000055743,
    0.27627642000061314,
    0.01899014399987209,
    0.2480028879999736,
    0.03710906400010572,
    0.03482608100057405,
    0.032676714999979595,
    0.07310355200024787,
    0.017912953000632115,
    0.03207276700049988,
    0.023559471999760717,
    0.05168081500050903,
    0.03297936099988874,
    0.03334843499942508,
    0.04054476999954204,
    0.06071383299968147,
    0.03955593000137014,
    0.047999720998632256,
    0.03432780900038779,
    0.038899295999726746,
    0.031080463000762393,
    0.03516555300120672,
    0.03235164400030044,
    0.015919100998871727,
    0.05007275600110006,
    0.03344238299905555,
    0.01666064699929848,
    0.05726409099952434,
    0.02686133299903304,
    0.03912705500079028,
    0.1902267440000287,
    0.04744286499953887,
    0.1042157470001257,
    0.024418513001364772,
    0.054518049999387586,
    0.025155041001198697,
    0.26959893700040993,
    0.03216551699915726,
    0.03607051699873409,
    0.04412058500020066,
    0.029482709000149043,
    0.08424836000085634,
    0.05525931600095646,
    0.01572313599899644,
    0.15512599300018337,
    0.23585365500002808,
    0.10996897099903435,
    0.036695511000289116,
    0.029440415999488323,
    0.09715325000070152,
    0.0314233349999995,
    0.3168103419993713,
    0.05029350400036492,
    0.08619930500026385,
    0.05322231600075611,
    0.06899582300138718,
    0.04197529100019892,
    0.19640522400004556,
    0.04194562300108373,
    0.05453580099856481,
    0.23285008600032597,
    0.020179433999146568,
    0.03172901399921102,
    0.08939190700039035,
    0.02431086700016749,
    0.23171630099932372,
    0.03349043700109178,
    0.028415030999894952,
    0.2651349139996455,
    0.15198846599923854,
    0.22939380900061224,
    0.16654295199987246,
    0.027110396998978104,
    0.22948890599946026,
    0.03674413600128901,
    0.1582293799983745,
    0.08297677500013378,
    0.23084976400059531,
    0.069867685000645,
    0.0826716369992937,
    0.23305778199937777,
    0.026792282000315026,
    0.05009349700048915,
    0.12207550200037076,
    0.0304055150008935,
    0.03458283100007975,
    0.03396327699920221,
    0.22127976499905344,
    0.060547091999978875,
    0.05597690399918065,
    0.25867508800001815,
    0.06261169400022482,
    0.028613541999220615,
    0.04251167499933217,
    0.02640951099965605,
    0.06446536799921887,
    0.06510441499995068,
    0.03708055100105412,
    0.053650981999453506,
    0.026094926999576273,
    0.0,
    0.056532295000579325,
    0.043200432000958244,
    0.06576311299977533,
    0.2412067940003908,
    0.08681167800023104,
    0.02740916899892909,
    0.09924356999908923,
    0.01876548499967612,
    0.03135824200035131
  ],
  "itls": [
    0.0026078097498611896,
    0.0014258239998525823,
    0.002694851666547038,
    0.0031580720816255423,
    0.002266870999847015,
    0.002894249222233864,
    0.002952009636332646,
    0.0028680333750799036,
    0.002907984363639226,
    0.0027316904998997416,
    0.002250329999696987,
    0.002740054571404471,
    0.0030646262777685885,
    0.0030646262777685885,
    0.0028842470000098627,
    0.0025551031998475083,
    0.003006371523822184,
    0.0028328070666854424,
    0.0023219563333138162,
    0.0025505499997962033,
    0.002674990500054264,
    0.00294036416000381,
    0.0027868495000120674,
    0.0028397888461488318,
    0.003283522633349397,
    0.0029557181250083886,
    0.0029220207234175177,
    0.002846032416679615,
    0.003044417999997397,
    0.0030667497567510756,
    0.0028928666923163223,
    0.0017604790000405046,
    0.0029246317857151943,
    0.002851093142843248,
    0.002851093142843248,
    0.002705626714357225,
    0.002206283333180181,
    0.0029680646206982383,
    0.0029680646206982383,
    0.002914361059993098,
    0.0028455098333021547,
    0.0027028526666678467,
    0.0027028526666678467,
    0.0017055039998012944,
    0.0027157941428543253,
    0.0029093989024415083,
    0.0029093989024415083,
    0.0029291352888928183,
    0.0029274764516054757,
    0.0027391541250381124,
    0.0026917012000922114,
    0.0022796350003773114,
    0.002826523928628636,
    0.002826523928628636,
    0.0026966812859297662,
    0.0026966812859297662,
    0.0026966812859297662,
    0.002346124333295544,
    0.0020371770006022416,
    0.0022996020003726394,
    0.0016327979992638575,
    0.0016327979992638575,
    0.002910707285731665,
    0.002910707285731665,
    0.002915355157918448,
    0.0027312199999869335,
    0.0028850408572387615,
    0.0014176170006976463,
    0.002900538533382739,
    0.0028535339998698975,
    0.0031357611267492144,
    0.0031357611267492144,
    0.0029570881739820597,
    0.002757703000042966,
    0.0022032106662663864,
    0.0028617926874403565,
    0.0020565793335360163,
    0.002877691499975299,
    0.0027685274000759817,
    0.0026973028572163976,
    0.0029360259091349276,
    0.0024612054999124666,
    0.0025873730000967043,
    0.002893337285578517,
    0.0027116025000092727,
    0.0031354682962922162,
    0.00299113330002001,
    0.00299113330002001,
    0.0027276960002685278,
    0.002565454599971417,
    0.002888398640061496,
    0.0032046414393831087,
    0.002943988499989953,
    0.0029973344166541616,
    0.0025562720002199057,
    0.002950324526313795,
    0.0024259886668005493,
    0.0024259886668005493,
    0.002940534617006593,
    0.002256637666505412,
    0.003075000941167031,
    0.003075000941167031,
    0.0030078324998612516,
    0.002969645121221688,
    0.0027279697501398914,
    0.002841374666786578,
    0.002746424833276251,
    0.002901291999954819,
    0.0022226423334359424,
    0.0017502099999546772,
    0.00941665400000602,
    0.0028541917499751435,
    0.0029183027500039316,
    0.0024049713332109,
    0.0028127378998760834,
    0.003081381568211906,
    0.004110880214284407,
    0.00309961764516277,
    0.002943171749972283,
    0.0029430943809746254,
    0.0036006644999765237,
    0.002913879166684368,
    0.0029413886543212067,
    0.002857798124978217,
    0.002857798124978217,
    0.002550594249896676,
    0.001648449999265722,
    0.002823041428720379,
    0.0018259240005136235,
    0.0028284198461523582,
    0.00274280300012227,
    0.002927538771421366,
    0.0029064635660379624,
    0.0028140736364796544,
    0.0025882047498271277,
    0.0028586651537457677,
    0.0029335392857319674,
    0.0027158358570886776,
    0.0028019221817058597,
    0.0027612640001279942,
    0.0027612640001279942,
    0.0026683980000338386,
    0.0024644629999481063,
    0.002799656899878755,
    0.002480584749719128,
    0.002666005333594512,
    0.002903330399931292,
    0.0029517589047741025,
    0.002822266599832801,
    0.002913999075008178
  ],
  "generated_texts": [
    "\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_",
    "\r\n\t\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\t\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "            } else {\n                return \"Error:",
    "\ufffdassistant",
    "\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u0639\u06a9\u0633\u06cc\u0644\u0631\u06a9",
    "\r\n\t\ufffd.text\r\n\t\ufffd.text\r\n\t\ufffd.text\r\n\t\ufffd.text\r\n\t",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\ufffd_",
    "\r\n\t",
    "\ufffdassistant",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\r\n<|reserved_special_token_194|>I apologize, but",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "]_systeem\n```\n",
    "",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_",
    "\r\n    .<|reserved_special_token_193|>I apologize,",
    "\t\t\ufffd_\ufffd_\ufffd_",
    "\r\n",
    "\r\n<|reserved_special_token_193",
    "\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u0432",
    "us\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "<|reserved_special_token_173",
    "",
    "ate",
    "\ufffd.m",
    "\r\n\t\t\ufffd_\ufffd_",
    "",
    "\u0432",
    "\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m\ufffd.m",
    "ivier\n\t\t//\t\t//\t\t//\t\t//\t\t//\t\t//\t\t//\t\t//\t\t//\t\t",
    "\r\n \t\ufffd\r\n\t\t\ufffd\r\n",
    "ar\t\t\ufffd_",
    "\r\n\t\t",
    "\ufffd.scalablytypedI apologize, but it seems like the text you provided",
    "\u064e",
    "er",
    "ical\r\n\t\t\ufffd_\ufffd_",
    "\r\n",
    "\r\n\t\t",
    "stitutef",
    "assistant\nI apologize",
    "\t",
    "\t",
    "_",
    "\r\n\t\t\ufffd\r\n\t\t\ufffd\r\n\t\t\ufffd\r\n\t\t",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u044f\u041c\u044b\u043d",
    "itator\ufffd_\ufffd_\ufffd_",
    "\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "ch\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\t// ...",
    "",
    "\r\n    .<|reserved_special_token_194|>I can\u2019t provide a",
    "\ufffd.\ufffd.",
    "\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.",
    "\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.",
    "\r\n\t\t\ufffd\r\n\t\t",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\r\n\t\t}",
    "\n\t\t//\t\t//\t",
    "\ufffd_\ufffd_\ufffd_",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_",
    "\r\n\t\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "",
    "\r\n\t\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "icsubmit",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n",
    "\ufffdassistant",
    "",
    "\ufffd_\ufffd_",
    "\ufffd.\ufffd.\ufffd.",
    "\u015fki\ufffd.\ufffd.",
    "<|reserved_special_token_193|>I apologize, but it seems like the text you provided is a",
    "",
    "\u06a9",
    "\r\n\t\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "\r\n<|reserved_special_token_194|>I apologize, but it seems like the input provided is a jumbled collection of words, phrases",
    "\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd.setPreferredWidth\ufffd.setPreferredWidth\ufffd.setPreferredWidth\ufffd.setPreferredWidth\ufffd.",
    "\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.\ufffd.",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u0161le\u0644\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631\u0646\u0631",
    "\ufffd.\ufffd.\ufffd.\ufffd.",
    " ",
    "s\t\ufffd_",
    "",
    "\r\n\t\ufffd.get\r\n\t",
    "\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "\r\n\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\u043d\u043e\u0440\u0435\u0436\u0438\u043c\u044b\u043d",
    "\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "",
    "\u0432\u043e\u0432\u0440\u0435\u043c\u044f\u0432\u043e\u0432\u0440\u0435\u043c\u044f\u0432\u043e\u0432",
    "\r\n\t\t}",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_",
    "\t\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_\ufffd_",
    "\ufffd_\ufffd_\ufffd_",
    "\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432\u0442\u0432"
  ],
  "errors": [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Traceback (most recent call last):\n  File \"/home/azureuser/powertrace-sim/client/backend_request_func.py\", line 296, in async_request_openai_completions\n    async for chunk_bytes in response.content:\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 52, in __anext__\n    rv = await self.read_func()\n         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 352, in readline\n    return await self.readuntil()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 380, in readuntil\n    raise ValueError(\"Chunk too big\")\nValueError: Chunk too big\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Traceback (most recent call last):\n  File \"/home/azureuser/powertrace-sim/client/backend_request_func.py\", line 296, in async_request_openai_completions\n    async for chunk_bytes in response.content:\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 52, in __anext__\n    rv = await self.read_func()\n         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 352, in readline\n    return await self.readuntil()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/azureuser/miniconda3/envs/inference/lib/python3.12/site-packages/aiohttp/streams.py\", line 380, in readuntil\n    raise ValueError(\"Chunk too big\")\nValueError: Chunk too big\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ],
  "request_timestamps": [
    1759862939.725208,
    1759862944.0403478,
    1759862946.368343,
    1759862946.7163796,
    1759862951.4904351,
    1759862952.5893724,
    1759862952.7792804,
    1759862953.0006878,
    1759862953.252364,
    1759862962.797728,
    1759862968.1927133,
    1759862977.3551815,
    1759862981.827122,
    1759862986.2768383,
    1759863011.084063,
    1759863012.9071922,
    1759863015.4297013,
    1759863017.3374853,
    1759863032.9015503,
    1759863033.6671875,
    1759863035.2735143,
    1759863039.8575318,
    1759863040.0924013,
    1759863043.8727674,
    1759863046.4349782,
    1759863047.7766395,
    1759863048.8672328,
    1759863051.7877288,
    1759863053.6181095,
    1759863056.0432522,
    1759863057.6953588,
    1759863071.7964294,
    1759863072.3677425,
    1759863072.7803164,
    1759863074.4702792,
    1759863078.0652144,
    1759863082.3730624,
    1759863084.3862455,
    1759863113.350874,
    1759863115.0842445,
    1759863120.2662668,
    1759863124.267032,
    1759863131.0229285,
    1759863145.9572592,
    1759863154.7872128,
    1759863160.5764158,
    1759863165.3850517,
    1759863167.010327,
    1759863167.6519473,
    1759863167.9110518,
    1759863169.0274985,
    1759863171.2908957,
    1759863174.2450957,
    1759863180.1869488,
    1759863192.9583056,
    1759863193.452707,
    1759863193.9101,
    1759863197.4739711,
    1759863202.9531116,
    1759863210.5000765,
    1759863221.497744,
    1759863237.912398,
    1759863239.95541,
    1759863241.8797197,
    1759863242.5171,
    1759863247.1381953,
    1759863251.4295764,
    1759863259.3543432,
    1759863259.7657735,
    1759863262.5546968,
    1759863266.0129905,
    1759863267.1322038,
    1759863267.855005,
    1759863275.7246897,
    1759863275.958149,
    1759863278.5429928,
    1759863279.0013843,
    1759863281.4494736,
    1759863297.108091,
    1759863299.3096578,
    1759863307.1155539,
    1759863307.6091905,
    1759863308.8678408,
    1759863310.9690938,
    1759863313.0258849,
    1759863317.4590037,
    1759863319.134516,
    1759863324.1389086,
    1759863328.2375338,
    1759863330.2629337,
    1759863332.5768025,
    1759863336.3506198,
    1759863336.6476316,
    1759863343.561811,
    1759863347.807209,
    1759863352.9913068,
    1759863356.0991695,
    1759863356.5432057,
    1759863358.628144,
    1759863360.743018,
    1759863362.2550077,
    1759863362.3752582,
    1759863367.7443767,
    1759863368.1940541,
    1759863371.9647436,
    1759863376.7960203,
    1759863380.8281932,
    1759863393.6921475,
    1759863394.0934541,
    1759863402.1915047,
    1759863402.2829797,
    1759863405.3395674,
    1759863407.4452722,
    1759863410.391119,
    1759863412.2354019,
    1759863413.0660143,
    1759863413.1851947,
    1759863416.0707839,
    1759863423.4771187,
    1759863425.3692405,
    1759863426.3483872,
    1759863426.691367,
    1759863427.058082,
    1759863428.0451021,
    1759863428.4679236,
    1759863429.703638,
    1759863430.0108151,
    1759863430.2525792,
    1759863438.022934,
    1759863438.7672021,
    1759863442.0180833,
    1759863447.9560406,
    1759863450.4016964,
    1759863451.0628052,
    1759863451.9636414,
    1759863454.2381911,
    1759863457.2405167,
    1759863458.9676971,
    1759863465.051243,
    1759863481.1184964,
    1759863481.2322338,
    1759863490.2893515,
    1759863492.3117864,
    1759863500.727693,
    1759863505.4152446,
    1759863522.9272356,
    1759863528.61503,
    1759863530.4345512
  ],
  "mean_ttft_ms": 81.10787429054531,
  "median_ttft_ms": 49.12799500016263,
  "std_ttft_ms": 73.98823578846876,
  "p99_ttft_ms": 273.13800299051763,
  "mean_tpot_ms": 2.7756894354950075,
  "median_tpot_ms": 2.8405574615788236,
  "std_tpot_ms": 0.6882904513130365,
  "p99_tpot_ms": 3.7588749810602136,
  "mean_itl_ms": 2.9588794573832313,
  "median_itl_ms": 2.993578499626892,
  "std_itl_ms": 1.2846284495721543,
  "p99_itl_ms": 3.6353912500999286
}